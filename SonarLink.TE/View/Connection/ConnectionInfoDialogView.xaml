<ui:DialogWindow xmlns:ui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                 x:Class="SonarLink.TE.View.ConnectionInfoDialogView"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 mc:Ignorable="d" 
                 SizeToContent="WidthAndHeight"
                 WindowStartupLocation="CenterOwner"
                 Title="Connect To SonarQube">

    <ui:DialogWindow.Resources>
        <BooleanToVisibilityConverter x:Key="TrueToVisibleConverter" />
        <Style x:Key = "HintText" TargetType="{x:Type TextBlock}">
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="DarkGray"/>
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>
        <Style x:Key = "TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key = "PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </ui:DialogWindow.Resources>

    <StackPanel Orientation="Vertical">

        <Rectangle Height="6" Width="330"/>

        <Grid>
            <TextBox  x:Name="ServerInput" Text="{Binding ServerUrl, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowWarning}" Value="True">
                                <Setter Property="Background" Value="LightGoldenrodYellow"/>
                                <Setter Property="Foreground" Value="DarkGray"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBlock Text="SonarQube server">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HintText}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsFocused, ElementName=ServerInput}" Value="False"/>
                                    <Condition Binding="{Binding Text, ElementName=ServerInput}" Value=""/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <TextBlock Text="Invalid Server URL" 
                   Visibility="{Binding ShowWarning, Converter={StaticResource TrueToVisibleConverter}}"
                   Margin="5"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"/>

        <Grid>
            <TextBox x:Name="LoginInput" Style="{StaticResource TextBoxStyle}" Text="{Binding Login, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="Username or Authentication token">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HintText}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsFocused, ElementName=LoginInput}" Value="False"/>
                                    <Condition Binding="{Binding Text, ElementName=LoginInput}" Value=""/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <Grid>
            <PasswordBox x:Name="PasswordInput" Style="{StaticResource PasswordBoxStyle}" PasswordChanged="PasswordInput_PasswordChanged" />
            <TextBlock Text="Password">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HintText}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsFocused, ElementName=PasswordInput}" Value="False"/>
                                    <Condition Binding="{Binding ShowPasswordHintText}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <ui:DialogButton Content="Sign in" Width="75" Margin="6" Click="SignInButtonClick" IsEnabled="{Binding IsServerUrlValid}"/>
    </StackPanel>
</ui:DialogWindow>
